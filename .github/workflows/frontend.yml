# This is a basic workflow to help you get started with Actions

name: CD Frontend

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - "client/**"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: |
           cd client
           npm install
           npm run build
        env:
          CI: false
       
      - name: Remove contents from nginx folder
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd /var/www/html
            rm -rf .

      # Runs a set of commands using the runners shell
      - name: Copy folder content recursively to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: build
          remote: /var/www/html
          host: ${{ secrets.HOST }}
          privateKey: ${{ secrets.KEY }} 
          username: ${{ secrets.USERNAME }}
          
      - name: Restart ngnix
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: sudo systemctl status nginx
