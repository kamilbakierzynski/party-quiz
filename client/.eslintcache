[{"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\index.tsx":"1","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\Router.tsx":"2","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\store\\hooks.tsx":"3","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\SignInPage.tsx":"4","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\config\\serverAxios.tsx":"5","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\store\\stores\\AuthStore.tsx":"6","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\components\\ui\\GameListItem.tsx":"7","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\store\\Store.tsx":"8","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\components\\routing\\RestrictedPath.tsx":"9","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\GamesList\\PublicGamesList.tsx":"10","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\GamesList\\GamesList.tsx":"11","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\GamesList\\CreateNewGame.tsx":"12","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\store\\stores\\GamesStore.tsx":"13","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\Layout.tsx":"14","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\MQTTConnector.tsx":"15","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\Chat.tsx":"16","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\store\\stores\\CurrentGameStore.tsx":"17","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\MessageSender.tsx":"18","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\config\\mqttClient.tsx":"19","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\Main\\WaitingForPlayers.tsx":"20","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\Main\\MQTTGameConnections.tsx":"21","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\Main\\GameLayout.tsx":"22","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\Main\\PlayersView.tsx":"23","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\Main\\QuestionView.tsx":"24","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\Main\\BettingView.tsx":"25","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\Main\\ScoreView.tsx":"26"},{"size":503,"mtime":1608399687034,"results":"27","hashOfConfig":"28"},{"size":1761,"mtime":1608507778866,"results":"29","hashOfConfig":"28"},{"size":212,"mtime":1608385205750,"results":"30","hashOfConfig":"28"},{"size":3125,"mtime":1609423557447,"results":"31","hashOfConfig":"28"},{"size":125,"mtime":1608392070738,"results":"32","hashOfConfig":"28"},{"size":1721,"mtime":1608484466986,"results":"33","hashOfConfig":"28"},{"size":1790,"mtime":1609185316476,"results":"34","hashOfConfig":"28"},{"size":274,"mtime":1608385324342,"results":"35","hashOfConfig":"28"},{"size":593,"mtime":1608385542861,"results":"36","hashOfConfig":"28"},{"size":973,"mtime":1609423378101,"results":"37","hashOfConfig":"28"},{"size":2488,"mtime":1609423087677,"results":"38","hashOfConfig":"28"},{"size":3321,"mtime":1609332841583,"results":"39","hashOfConfig":"28"},{"size":2245,"mtime":1609288385442,"results":"40","hashOfConfig":"28"},{"size":495,"mtime":1609421559065,"results":"41","hashOfConfig":"28"},{"size":1950,"mtime":1608506708411,"results":"42","hashOfConfig":"28"},{"size":1516,"mtime":1609186668634,"results":"43","hashOfConfig":"28"},{"size":5122,"mtime":1609367349055,"results":"44","hashOfConfig":"28"},{"size":1351,"mtime":1608508219643,"results":"45","hashOfConfig":"28"},{"size":112,"mtime":1608499826936,"results":"46","hashOfConfig":"28"},{"size":3523,"mtime":1609421291715,"results":"47","hashOfConfig":"28"},{"size":938,"mtime":1609333038307,"results":"48","hashOfConfig":"28"},{"size":2859,"mtime":1609351378875,"results":"49","hashOfConfig":"28"},{"size":1811,"mtime":1609423812684,"results":"50","hashOfConfig":"28"},{"size":1358,"mtime":1609420544835,"results":"51","hashOfConfig":"28"},{"size":1726,"mtime":1609349217672,"results":"52","hashOfConfig":"28"},{"size":2917,"mtime":1609370336378,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"1duu839",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\index.tsx",[],["111","112"],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\Router.tsx",[],["113","114"],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\store\\hooks.tsx",[],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\SignInPage.tsx",[],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\config\\serverAxios.tsx",[],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\store\\stores\\AuthStore.tsx",[],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\components\\ui\\GameListItem.tsx",["115","116"],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\store\\Store.tsx",[],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\components\\routing\\RestrictedPath.tsx",[],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\GamesList\\PublicGamesList.tsx",["117","118"],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\GamesList\\GamesList.tsx",[],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\GamesList\\CreateNewGame.tsx",[],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\store\\stores\\GamesStore.tsx",["119","120"],"import { Action, action, computed, Computed, thunk, Thunk } from \"easy-peasy\";\r\nimport { Moment } from \"moment\";\r\nimport { serverAxios } from \"../../config/serverAxios\";\r\nimport { User } from \"./AuthStore\";\r\nimport { GameState } from \"./CurrentGameStore\";\r\nimport {\r\n  GamesListResponse,\r\n  JoinGameResponse,\r\n  NewGameResponse,\r\n} from \"./ServerResponses\";\r\n\r\nexport interface GamesStore {\r\n  gamesArray: Array<Game>;\r\n  overwriteGamesArray: Action<GamesStore, Array<Game>>;\r\n  createGame: Thunk<GamesStore, CreateGame, never, never, Promise<string>>;\r\n  getGames: Thunk<GamesStore>;\r\n  joinGame: Thunk<\r\n    GamesStore,\r\n    JoinGame,\r\n    never,\r\n    never,\r\n    Promise<{ status: boolean; id?: string }>\r\n  >;\r\n}\r\n\r\nconst games: GamesStore = {\r\n  gamesArray: [],\r\n  overwriteGamesArray: action((state, payload) => {\r\n    state.gamesArray = payload;\r\n  }),\r\n  createGame: thunk(async (actions, payload) => {\r\n    const { data } = await serverAxios.post<NewGameResponse>(\r\n      \"/games/new-game\",\r\n      payload\r\n    );\r\n    if (data.response === \"OK\") {\r\n      return data.id;\r\n    } else {\r\n      return \"\";\r\n    }\r\n  }),\r\n  getGames: thunk(async (actions, payload) => {\r\n    serverAxios.get<GamesListResponse>(\"/games/list\").then(({ data }) => {\r\n      if (data.games) {\r\n        actions.overwriteGamesArray(data.games);\r\n      }\r\n    });\r\n  }),\r\n  joinGame: thunk(async (actions, payload) => {\r\n    return serverAxios\r\n      .post<JoinGameResponse>(\"/games/join-game\", payload.body, {\r\n        params: payload.params,\r\n      })\r\n      .then(({ data }) => {\r\n        if (data.response === \"OK\") {\r\n          return { status: true, id: data.id };\r\n        }\r\n        return { status: false };\r\n      });\r\n  }),\r\n};\r\n\r\nexport interface Game extends GameState {\r\n  id: string;\r\n  gameTitle: string;\r\n  maxNumberOfPlayers: number;\r\n  currentPlayers: number;\r\n  creationDate: Moment;\r\n  joinedPlayers: Array<User>;\r\n  joinCode: string;\r\n  public: boolean;\r\n  started: boolean;\r\n  creatorId: string;\r\n}\r\n\r\nexport interface CreateGame {\r\n  gameTitle: string;\r\n  public: boolean;\r\n  maxNumberOfPlayers: number;\r\n  user: User;\r\n}\r\n\r\nexport interface JoinGame {\r\n  params: { code?: string; id?: string };\r\n  body: User;\r\n}\r\n\r\nexport default games;\r\n","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\Layout.tsx",[],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\MQTTConnector.tsx",["121","122","123"],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport mqtt from \"../../config/mqttClient\";\r\nimport { Dimmer, Loader, Segment } from \"semantic-ui-react\";\r\nimport { useStoreActions, useStoreState } from \"../../store/hooks\";\r\nimport { serverAxios } from \"../../config/serverAxios\";\r\nimport { Game } from \"../../store/stores/GamesStore\";\r\n\r\ninterface MQTTConnector {\r\n  children: JSX.Element;\r\n}\r\n\r\nconst MQTTConnector = ({ children }: MQTTConnector) => {\r\n  const { idGame } = useParams() as Params;\r\n  const user = useStoreState((state) => state.auth.user);\r\n  const [awaitConnection, setAwaitConnection] = useState(true);\r\n  const setGame = useStoreActions((actions) => actions.currentGame.setGame);\r\n  const listenForChatMessages = useStoreActions(\r\n    (actions) => actions.currentGame.listenForChatMessages\r\n  );\r\n  const stopListening = useStoreActions(\r\n    (actions) => actions.currentGame.stopListeningForChatMessages\r\n  );\r\n\r\n  useEffect(() => {\r\n    serverAxios.get<Array<Game>>(`/games/${idGame}`).then(({ data }) => {\r\n      setGame(data[0]);\r\n      listenForChatMessages();\r\n      setAwaitConnection(false);\r\n    });\r\n    mqtt.publish(\r\n      `game/user-presence/${idGame}`,\r\n      JSON.stringify({ action: \"JOIN\", payload: user })\r\n    );\r\n  }, [idGame]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      mqtt.publish(\r\n        `game/user-presence/${idGame}`,\r\n        JSON.stringify({ action: \"LEAVE\", payload: user })\r\n      );\r\n      stopListening();\r\n    };\r\n  }, []);\r\n\r\n  return awaitConnection ? (\r\n    <div style={{ width: \"100%\", height: \"100vh\" }}>\r\n      <Segment>\r\n        <Dimmer active>\r\n          <Loader size=\"massive\">Loading your game</Loader>\r\n        </Dimmer>\r\n        <div style={{ width: \"100%\", height: \"100vh\" }}></div>\r\n      </Segment>\r\n    </div>\r\n  ) : (\r\n    children\r\n  );\r\n};\r\nexport default MQTTConnector;\r\n\r\ninterface Params {\r\n  idGame: string;\r\n}\r\n","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\Chat.tsx",["124","125","126"],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\store\\stores\\CurrentGameStore.tsx",["127","128"],"import { Action, action, computed, Computed, thunk, Thunk } from \"easy-peasy\";\r\nimport { Moment } from \"moment\";\r\nimport { User } from \"./AuthStore\";\r\nimport { Game } from \"./GamesStore\";\r\nimport { StoreModel } from \"../Store\";\r\nimport mqtt from \"../../config/mqttClient\";\r\nimport { serverAxios } from \"../../config/serverAxios\";\r\n\r\nexport interface CurrentGameStore {\r\n  mqttReducer: Thunk<CurrentGameStore, MQTTAction>;\r\n  game?: Game;\r\n  setGame: Action<CurrentGameStore, Game>;\r\n  chatMessages: Array<Message>;\r\n  addMessageToState: Action<CurrentGameStore, Message>;\r\n  sendMessage: Thunk<CurrentGameStore, Message, StoreModel>;\r\n  listenForChatMessages: Thunk<CurrentGameStore, never, StoreModel>;\r\n  listenForGameState: Thunk<CurrentGameStore, never, StoreModel>;\r\n  stopListeningForChatMessages: Thunk<CurrentGameStore, never, StoreModel>;\r\n  stopListeningForGameState: Thunk<CurrentGameStore, never, StoreModel>;\r\n  clearStore: Action<CurrentGameStore>;\r\n  // HTPP Endpoints\r\n  startGame: Thunk<CurrentGameStore, never, StoreModel>;\r\n  answerQuestion: Thunk<CurrentGameStore, { key: string }, StoreModel>;\r\n  betOnAnswer: Thunk<\r\n    CurrentGameStore,\r\n    { user: User; key: string; bet: number },\r\n    StoreModel\r\n  >;\r\n  nextQuestion: Thunk<CurrentGameStore, never, StoreModel>;\r\n  skipQuestion: Thunk<CurrentGameStore, never, StoreModel>;\r\n}\r\n\r\nconst currentGame: CurrentGameStore = {\r\n  mqttReducer: thunk((actions, payload, { getState }) => {\r\n    const { topic, message } = payload;\r\n    const { game } = getState();\r\n    if (topic === `game/chat/${game?.id}`) {\r\n      actions.addMessageToState(JSON.parse(message.toString()));\r\n    } else if (topic === `game/state/${game?.id}`) {\r\n      console.log(JSON.parse(message.toString()));\r\n      actions.setGame(JSON.parse(message.toString()));\r\n    }\r\n  }),\r\n  game: undefined,\r\n  setGame: action((state, payload) => {\r\n    state.game = payload;\r\n  }),\r\n  chatMessages: [],\r\n  addMessageToState: action((state, payload) => {\r\n    state.chatMessages.push(payload);\r\n  }),\r\n  sendMessage: thunk(async (actions, payload, { getState }) => {\r\n    const { game } = getState();\r\n    if (game?.id) {\r\n      const chatTopic = `game/chat/${game.id}`;\r\n      mqtt.publish(chatTopic, JSON.stringify(payload));\r\n    }\r\n  }),\r\n  listenForChatMessages: thunk(async (actions, payload, { getState }) => {\r\n    const { game } = getState();\r\n    if (game?.id) {\r\n      const chatTopic = `game/chat/${game.id}`;\r\n      mqtt.subscribe(chatTopic);\r\n    }\r\n  }),\r\n  listenForGameState: thunk(async (actions, payload, { getState }) => {\r\n    const { game } = getState();\r\n    if (game?.id) {\r\n      const chatTopic = `game/state/${game.id}`;\r\n      mqtt.subscribe(chatTopic);\r\n    }\r\n  }),\r\n  stopListeningForChatMessages: thunk(\r\n    async (actions, payload, { getState }) => {\r\n      const { game } = getState();\r\n      if (game?.id) {\r\n        const chatTopic = `game/state/${game.id}`;\r\n        mqtt.unsubscribe(chatTopic);\r\n        actions.clearStore();\r\n      }\r\n    }\r\n  ),\r\n  stopListeningForGameState: thunk(async (actions, payload, { getState }) => {\r\n    const { game } = getState();\r\n    if (game?.id) {\r\n      const chatTopic = `game/state/${game.id}`;\r\n      mqtt.unsubscribe(chatTopic);\r\n      actions.clearStore();\r\n    }\r\n  }),\r\n  clearStore: action((state, payload) => {\r\n    state.game = undefined;\r\n    state.chatMessages = [];\r\n  }),\r\n  startGame: thunk(async (actions, payload, { getState }) => {\r\n    const { game } = getState();\r\n    if (game?.id) {\r\n      serverAxios.post(`/current-game/${game.id}/start-game`);\r\n    }\r\n  }),\r\n  answerQuestion: thunk(async (actions, payload, { getState }) => {\r\n    const { game } = getState();\r\n    if (game?.id) {\r\n      serverAxios.post(`/current-game/${game.id}/answer-question`, payload);\r\n    }\r\n  }),\r\n  betOnAnswer: thunk(async (actions, payload, { getState }) => {\r\n    const { game } = getState();\r\n    if (game?.id) {\r\n      serverAxios.post(`/current-game/${game.id}/bet-answer`, payload);\r\n    }\r\n  }),\r\n  nextQuestion: thunk(async (actions, payload, { getState }) => {\r\n    const { game } = getState();\r\n    if (game?.id) {\r\n      serverAxios.post(`/current-game/${game.id}/next-question`, payload);\r\n    }\r\n  }),\r\n  skipQuestion: thunk(async (actions, payload, { getState }) => {\r\n    const { game } = getState();\r\n    if (game?.id) {\r\n      serverAxios.post(`/current-game/${game.id}/skip-question`, payload);\r\n    }\r\n  }),\r\n};\r\n\r\nexport interface GameState {\r\n  state?: {\r\n    question?: Question;\r\n    scores: Array<Score>;\r\n    bets?: Array<Bet>;\r\n  };\r\n}\r\n\r\nexport interface Question {\r\n  text: string;\r\n  possible_answers: Array<Answer>;\r\n  user_asked: User;\r\n  user_answer?: Answer;\r\n}\r\n\r\nexport interface Answer {\r\n  key: string;\r\n  text: string;\r\n}\r\n\r\nexport interface Score {\r\n  user: User;\r\n  score: number;\r\n}\r\n\r\nexport interface Bet {\r\n  user: User;\r\n  answer: Answer;\r\n  bet: number;\r\n}\r\n\r\nexport interface Message {\r\n  sender: User;\r\n  text: string;\r\n  creationDate: Moment | number;\r\n}\r\n\r\nexport interface MQTTAction {\r\n  topic: string;\r\n  message: Buffer;\r\n}\r\n\r\nexport default currentGame;\r\n","C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\MessageSender.tsx",["129"],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\config\\mqttClient.tsx",[],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\Main\\WaitingForPlayers.tsx",["130"],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\Main\\MQTTGameConnections.tsx",["131","132","133","134","135","136","137"],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\Main\\GameLayout.tsx",[],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\Main\\PlayersView.tsx",[],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\Main\\QuestionView.tsx",["138"],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\Main\\BettingView.tsx",["139"],"C:\\Users\\kamil\\PROGRAMOWANIE\\protokoly_sieci_web\\party-quiz\\client\\src\\pages\\Game\\Main\\ScoreView.tsx",["140","141"],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"142","replacedBy":"146"},{"ruleId":"144","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":2,"column":31,"nodeType":"150","messageId":"151","endLine":2,"endColumn":40},{"ruleId":"152","severity":1,"message":"153","line":16,"column":7,"nodeType":"150","messageId":"154","endLine":16,"endColumn":19},{"ruleId":"148","severity":1,"message":"155","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":14},{"ruleId":"156","severity":1,"message":"157","line":17,"column":6,"nodeType":"158","endLine":17,"endColumn":8,"suggestions":"159"},{"ruleId":"148","severity":1,"message":"160","line":1,"column":26,"nodeType":"150","messageId":"151","endLine":1,"endColumn":34},{"ruleId":"148","severity":1,"message":"161","line":1,"column":36,"nodeType":"150","messageId":"151","endLine":1,"endColumn":44},{"ruleId":"152","severity":1,"message":"162","line":13,"column":7,"nodeType":"150","messageId":"154","endLine":13,"endColumn":20},{"ruleId":"156","severity":1,"message":"163","line":35,"column":6,"nodeType":"158","endLine":35,"endColumn":14,"suggestions":"164"},{"ruleId":"156","severity":1,"message":"165","line":45,"column":6,"nodeType":"158","endLine":45,"endColumn":8,"suggestions":"166"},{"ruleId":"148","severity":1,"message":"167","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":26},{"ruleId":"148","severity":1,"message":"168","line":2,"column":17,"nodeType":"150","messageId":"151","endLine":2,"endColumn":22},{"ruleId":"148","severity":1,"message":"169","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":25},{"ruleId":"148","severity":1,"message":"160","line":1,"column":26,"nodeType":"150","messageId":"151","endLine":1,"endColumn":34},{"ruleId":"148","severity":1,"message":"161","line":1,"column":36,"nodeType":"150","messageId":"151","endLine":1,"endColumn":44},{"ruleId":"148","severity":1,"message":"167","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":26},{"ruleId":"148","severity":1,"message":"170","line":7,"column":3,"nodeType":"150","messageId":"151","endLine":7,"endColumn":10},{"ruleId":"148","severity":1,"message":"171","line":1,"column":28,"nodeType":"150","messageId":"151","endLine":1,"endColumn":36},{"ruleId":"148","severity":1,"message":"172","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":19},{"ruleId":"148","severity":1,"message":"173","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":12},{"ruleId":"148","severity":1,"message":"174","line":4,"column":10,"nodeType":"150","messageId":"151","endLine":4,"endColumn":16},{"ruleId":"148","severity":1,"message":"175","line":4,"column":18,"nodeType":"150","messageId":"151","endLine":4,"endColumn":24},{"ruleId":"148","severity":1,"message":"176","line":4,"column":26,"nodeType":"150","messageId":"151","endLine":4,"endColumn":33},{"ruleId":"156","severity":1,"message":"177","line":23,"column":6,"nodeType":"158","endLine":23,"endColumn":8,"suggestions":"178"},{"ruleId":"148","severity":1,"message":"179","line":7,"column":16,"nodeType":"150","messageId":"151","endLine":7,"endColumn":20},{"ruleId":"148","severity":1,"message":"179","line":7,"column":16,"nodeType":"150","messageId":"151","endLine":7,"endColumn":20},{"ruleId":"148","severity":1,"message":"179","line":8,"column":16,"nodeType":"150","messageId":"151","endLine":8,"endColumn":20},{"ruleId":"156","severity":1,"message":"180","line":29,"column":6,"nodeType":"158","endLine":29,"endColumn":12,"suggestions":"181"},"no-native-reassign",["182"],"no-negated-in-lhs",["183"],["182"],["183"],"@typescript-eslint/no-unused-vars","'Statistic' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-redeclare","'GameListItem' is already defined.","redeclared","'Card' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getGames'. Either include it or remove the dependency array.","ArrayExpression",["184"],"'computed' is defined but never used.","'Computed' is defined but never used.","'MQTTConnector' is already defined.","React Hook useEffect has missing dependencies: 'listenForChatMessages', 'setGame', and 'user'. Either include them or remove the dependency array.",["185"],"React Hook useEffect has missing dependencies: 'idGame', 'stopListening', and 'user'. Either include them or remove the dependency array.",["186"],"'useEffect' is defined but never used.","'Input' is defined but never used.","'useStoreActions' is defined but never used.","'Message' is defined but never used.","'useState' is defined but never used.","'useParams' is defined but never used.","'mqtt' is defined but never used.","'Dimmer' is defined but never used.","'Loader' is defined but never used.","'Segment' is defined but never used.","React Hook useEffect has missing dependencies: 'listenForGameState' and 'stopListening'. Either include them or remove the dependency array.",["187"],"'Text' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isAskedUser' and 'nextQuestion'. Either include them or remove the dependency array.",["188"],"no-global-assign","no-unsafe-negation",{"desc":"189","fix":"190"},{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},"Update the dependencies array to be: [getGames]",{"range":"199","text":"200"},"Update the dependencies array to be: [idGame, listenForChatMessages, setGame, user]",{"range":"201","text":"202"},"Update the dependencies array to be: [idGame, stopListening, user]",{"range":"203","text":"204"},"Update the dependencies array to be: [listenForGameState, stopListening]",{"range":"205","text":"206"},"Update the dependencies array to be: [isAskedUser, nextQuestion, time]",{"range":"207","text":"208"},[592,594],"[getGames]",[1310,1318],"[idGame, listenForChatMessages, setGame, user]",[1534,1536],"[idGame, stopListening, user]",[822,824],"[listenForGameState, stopListening]",[990,996],"[isAskedUser, nextQuestion, time]"]